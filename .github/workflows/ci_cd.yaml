name: CI/CD Pipeline

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23.2

      - name: Build Docker image
        run: docker build --target builder -t rstream-consumer -f .deployment/docker/Dockerfile .

      - name: Run coverage check script
        run: ./scripts/coverage_check.sh

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: cover.out

      - name: Build final Docker image
        run: docker build -t rstream-consumer-final:${{ github.sha }} -f .deployment/docker/Dockerfile .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: "rstream-consumer-final:${{ github.sha }}"
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23.2

      - name: Set up GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          version: latest

      - name: Run GoReleaser
        run: goreleaser release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}